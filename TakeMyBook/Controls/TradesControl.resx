<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="tradesDataGridView.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="tradeViewBindingSource.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>176, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>